unit Home_U;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, ComCtrls, StdCtrls, ExtCtrls, RibbonLunaStyleActnCtrls, Ribbon,
  pngimage, Menus, Grids, DBGrids, dmCoffeeShop_U, FileCtrl, ValEdit, ADODB;

type
  TfrmHome = class(TForm)
    pnlSideBar: TPanel;
    pcViews: TPageControl;
    tbsCustomers: TTabSheet;
    tbsEmployees: TTabSheet;
    btnSales: TButton;
    btnEmployees: TButton;
    btnCustomers: TButton;
    btnInventory: TButton;
    btnOrders: TButton;
    imgLogo: TImage;
    tbsInventory: TTabSheet;
    tbsOrders: TTabSheet;
    tbsSales: TTabSheet;
    pnlHeader: TPanel;
    mmTop: TMainMenu;
    shpSelected: TShape;
    gridC: TDBGrid;
    Splitter: TSplitter;
    gridE: TDBGrid;
    gridI: TDBGrid;
    gridO: TDBGrid;
    gridS: TDBGrid;
    pnlManageCustomers: TPanel;
    edtSearch: TEdit;
    btnSearch: TButton;
    cmbxSearchFor: TComboBox;
    procedure FormCreate(Sender: TObject);
    procedure btnEmployeesClick(Sender: TObject);
    procedure btnCustomersClick(Sender: TObject);
    procedure btnInventoryClick(Sender: TObject);
    procedure edtSearchChange(Sender: TObject);
  private
    { Private declarations }
    procedure SwitchPage(TabSheet : TTabSheet; PageTitle : String; Button : TButton);
    procedure ExecuteSQL(adoQuery : TADOQuery; sqlStatement : string);

  public
    { Public declarations }
  end;

var
  frmHome: TfrmHome;

implementation

{$R *.dfm}

procedure TfrmHome.btnCustomersClick(Sender: TObject);
begin
  SwitchPage(tbsCustomers, 'Customers', btnCustomers);
end;

procedure TfrmHome.btnEmployeesClick(Sender: TObject);
begin
  SwitchPage(tbsEmployees, 'Employees', btnEmployees);
end;

procedure TfrmHome.btnInventoryClick(Sender: TObject);
begin
  SwitchPage(tbsInventory, 'Inventory', btnInventory);
end;


procedure TfrmHome.edtSearchChange(Sender: TObject);
begin
  if edtSearch.Text = '' then
  begin
    ExecuteSQL(dmCoffeeShop.qryCustomers, 'SELECT * FROM tblCustomers');
  end else
  begin
      ExecuteSQL(dmCoffeeShop.qryCustomers, 'SELECT * FROM tblCustomers ' +
  'WHERE ' + cmbxSearchFor.Text + ' LIKE ' + '"%' + edtSearch.Text + '%"');
  end;
end;


procedure TfrmHome.ExecuteSQL(adoQuery: TADOQuery; sqlStatement : string);
begin
  // Close existing query
  AdoQuery.Close;

  // Clear SQL
  AdoQuery.SQL.Clear;

  // Build new SQL
  AdoQuery.SQL.Add(sqlStatement);

  // Execute new query
  AdoQuery.Open;
end;

procedure TfrmHome.FormCreate(Sender: TObject);
var
  Tab : TTabSheet;
  i: Integer;
begin
  shpSelected.Brush.Color := RGB(252, 163, 17);

  shpSelected.Left := btnCustomers.Left + (btnCustomers.Width - shpSelected.Width) div 2;
  shpSelected.Top := btnCustomers.Top + (btnCustomers.Height - shpSelected.Height) div 2;

  for i := 0 to pcViews.ControlCount - 1 do
  begin
    if (pcViews.Controls[i] is TTabSheet) then
    begin
      Tab := pcViews.Controls[i] as TTabSheet;
      Tab.TabVisible := False;
    end;
  end;
  pnlHeader.Color := RGB(252, 163, 17);
  tbsCustomers.Show;

end;


procedure TfrmHome.SwitchPage(TabSheet: TTabSheet; PageTitle : String;Button : TButton);
begin
  TabSheet.Show;
  shpSelected.Left := Button.Left + (Button.Width - shpSelected.Width) div 2;
  shpSelected.Top := Button.Top + (Button.Height - shpSelected.Height) div 2;
  pnlHeader.Caption := PageTitle;
  pnlHeader.Parent := TabSheet;
  pnlHeader.Show;
  Splitter.Parent := TabSheet;
end;

end.
